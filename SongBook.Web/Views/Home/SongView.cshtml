@using SongBook.Web.Models
@model SongBook.Web.Models.SongViewModel

@{
    ViewData["Title"] = "Home Page";

    <style>
        .fixedSize {
            white-space: nowrap
        }
        .control, .chord {
            font-family: sans-serif
        }
        .name {
            font-family: serif;
            text-align: center;
        }
        .author {
            font-family: serif;
            text-align: center;
        }
        .fingering, .rythm {
            font-family: monospace;
            font-size: 120%
        }
        .part {
            font-family: sans-serif;
            vertical-align: top;
        }
        .tab {
            height: 80px
        }
        .tab:hover {
            height: 100%
        }
        iframe {
            border: 0
        }
        .music {
            width: 100%
        }
    </style>

    void RenderChord(ChordViewModel chord){<a title="@chord.Fingering" class="chord">@chord</a>}

    void RenderChords(IList<ChordViewModel> chords)
    {
        if (chords.Count == 1)
        {
            RenderChord(chords[0]);
        }
        else
        {
            RenderChord(chords[0]);@:-@{RenderChord(chords[1]);}
        }
        <br />
    }

    void RenderChordsColumn(IEnumerable<IList<ChordViewModel>> chordsColumn)
    {
        foreach (IList<ChordViewModel> chords in chordsColumn)
        {
            RenderChords(chords);
        }
    }

    void RenderRythmColumn(IEnumerable<string> rythms)
    {
        foreach (string rythm in rythms)
        {
            @rythm<br />
        }
    }

    void RenderTabs(IEnumerable<Uri> tabs)
    {
        foreach (Uri tab in tabs)
        {
            <img class="tab" src="@tab" /><br />
        }
    }

    void RenderMusic(PartViewModel part)
    {
        if (part.IsRepeat && !Model.ShowRepeats)
        {
            <td colspan="4"/>
        }
        else if (part.Tabs.Count > 0)
        {
            <td colspan="4">
                @{
                    RenderTabs(part.Tabs);
                }
            </td>
        }
        else
        {
            <td>
                @{
                    RenderChordsColumn(part.FirstBarChords);
                }
            </td>
            <td>
                @{
                    RenderChordsColumn(part.SecondBarChords);
                }
            </td>
            <td class="rythm">
                @{
                    RenderRythmColumn(part.FirstBarRythms);
                }
            </td>
            <td class="rythm">
                @{
                    RenderRythmColumn(part.SecondBarRythms);
                }
            </td>
        }
    }

    void RenderPart(PartViewModel part)
    {
        <tr>
            <td class="part">@part.Part.Name</td>
            @{
                RenderMusic(part);
            }
            <td>
                @foreach (string line in part.TextLines)
                {
                    @line<br />
                }
            </td>
        </tr>
    }

    <a href="/" class="control">Все песни</a>
    <h1 class="name">@Model.Song.Name</h1>
    <h3 class="author">@Model.Song.Author</h3>

    if (Model.Parts.Any(p => p.Part.HalfBars.Any(hb => hb.Chord is not null)))
    {
        <table class="control">
            <tr>
                <td>
                    Capo: <a href="/song?id=@Model.Id&delta=1&showRepeats=@Model.ShowRepeats">–</a> @Model.GetCurrentCapo() <a href="/song?id=@Model.Id&delta=-1&showRepeats=@Model.ShowRepeats">+</a> баррэ: @Model.GetCurrentBarresPercent().ToString("P0") <a href="/song?id=@Model.Id&autotune=true&showRepeats=@Model.ShowRepeats">😌</a>
                </td>
                <td>
                    Повторы: 
                    <a href="/song?id=@Model.Id&semitones=@Model.Song.CurrentTune&showRepeats=@(!Model.ShowRepeats)">
                        @if (Model.ShowRepeats)
                        {
                            <text>скрыть</text>
                        }
                        else
                        {
                            <text>показать</text>
                        }
                    </a>
                </td>
            </tr>
        </table>
        <table>
            @foreach (ChordViewModel chordViewModel in Model.Parts
                                                            .SelectMany(p => p.Part.HalfBars)
                                                            .Where(hb => hb.Chord is not null)
                                                            .Select(hb => new ChordViewModel(hb.Chord, hb.ChordOption))
                                                            .Distinct()
                                                            .Where(c => !c.IsSimple))
            {
                <tr>
                    <td class="chord">@chordViewModel</td>
                    <td class="fingering">@chordViewModel.Fingering</td>
                </tr>
            }
        </table>
    }
    <table class="fixedSize">
        @foreach (PartViewModel part in Model.Parts)
        {
            RenderPart(part);
        }
    </table>
    if (Model.Song.Music is not null)
    {
        <iframe height="100" src="@Model.Song.Music" class="music"></iframe>
    }
    if (Model.Song.Tutorials is not null)
    {
        foreach (Uri tutorial in Model.Song.Tutorials)
        {
            <iframe width="560" height="315" src="@tutorial" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
        }
    }
}