@model SongViewModel

@{
    ViewData["Title"] = "Home Page";

    Func<ChordViewModel, object> renderChord = @<a title="@item.Fingering">@item.ToString()</a>;

    Func<IList<ChordViewModel>, object> renderChords =
        @<text>
            @if (item.Count == 1)
            {
                @renderChord(item[0])
            }
            else
            {
                @renderChord(item[0])@:-@renderChord(item[1])
            }
            <br />
        </text>;

    Func<IList<IList<ChordViewModel>>, object> renderChordsLine =
        @<text>
            @foreach (IList<ChordViewModel> chords in item)
            {
                @renderChords(chords)
            }
        </text>;

    Func<IList<Uri>, object> renderTabs =
        @<text>
            @foreach (Uri tab in item)
            {
                <img src="@tab" height="75" /><br />
            }
         </text>;

    Func<PartViewModel, object> renderMusic =
        @<text>
            @if (item.IsRepeat)
            {
                <td colspan="2"/>
            }
            else
            {
                if (item.Tabs.Count > 0)
                 {
                     <td colspan="2">
                         @renderTabs(item.Tabs)
                     </td>
                 }
                 else
                 {
                     <td>
                         @renderChordsLine(item.FirstBarChords)
                     </td>
                     <td>
                         @renderChordsLine(item.SecondBarChords)
                     </td>
                 }
            }
         </text>;

    Func<PartViewModel, object> renderPart =
        @<tr>
            <td valign="top">@item.Part.Name</td>
            @renderMusic(item)
            <td>
                @foreach (string line in item.TextLines)
                {
                    @line<br />
                }
            </td>
        </tr>;

        <a href="/">Все песни</a>
        <div class="text-center">
            <h1 class="display-4">@Model.Song.Name</h1>
            <h3 class="display-4">@Model.Song.Author</h3>
        </div>
    <div>
        Capo: <a href="/song?id=@Model.Id&semitones=@(Model.Song.CurrentTune+1)" class="btn btn-default">–</a> @Model.Song.GetCurrentCapo() <a href="/song?id=@Model.Id&semitones=@(Model.Song.CurrentTune-1)" class="btn btn-default">+</a>
    </div>
    <table>
        @foreach (ChordViewModel chordViewModel in Model.Parts
                                                        .SelectMany(p => p.Part.HalfBars)
                                                        .Where(hb => hb.Chord != null)
                                                        .Select(hb => new ChordViewModel(hb.Chord, hb.ChordOption))
                                                        .Distinct()
                                                        .Where(c => !c.IsSimple))
        {
            <tr>
                <td>@chordViewModel.ToString()</td>
                <td>@chordViewModel.Fingering</td>
            </tr>
        }
    </table>
    <table>
        @foreach (PartViewModel part in Model.Parts)
        {
            @renderPart(part)
        }
    </table>
}