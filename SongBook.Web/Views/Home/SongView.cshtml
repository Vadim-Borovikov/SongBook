@using SongBook.Web.Models
@model SongBook.Web.Models.SongViewModel

@{
    ViewData["Title"] = "Home Page";

    <style>
        .fixedSize {
            white-space: nowrap
        }
        .control, .chord {
            font-family: sans-serif
        }
        .name {
            font-family: serif;
            text-align: center;
        }
        .author {
            font-family: serif;
            text-align: center;
        }
        .fingering, .rythm {
            font-family: monospace;
            font-size: 120%
        }
        .part {
            font-family: sans-serif;
            vertical-align: top;
        }
        .tab {
            height: 80px
        }
        .tab:hover {
            height: 100%
        }
        iframe {
            border: 0
        }
        .music {
            width: 100%
        }
    </style>

    Func<ChordViewModel, object> renderChord = @<a title="@item.Fingering" class="chord">@item.ToString()</a>;

    Func<IList<ChordViewModel>, object> renderChords =
        @<text>
            @if (item.Count == 1)
            {
                @renderChord(item[0])
            }
            else
            {
                @renderChord(item[0])@:-@renderChord(item[1])
            }
            <br />
        </text>;

    Func<IList<IList<ChordViewModel>>, object> renderChordsColumn =
        @<text>
            @foreach (IList<ChordViewModel> chords in item)
            {
                @renderChords(chords)
            }
        </text>;

    Func<IList<string>, object> renderRythmColumn =
        @<text>
            @foreach (string rythm in item)
            {
                @rythm<br />
            }
         </text>;

    Func<IList<Uri>, object> renderTabs =
        @<text>
            @foreach (Uri tab in item)
            {
                <img class="tab" src="@tab" /><br />
            }
         </text>;

    Func<PartViewModel, object> renderMusic =
        @<text>
            @if (item.IsRepeat && !Model.ShowRepeats)
            {
                <td colspan="4"/>
            }
            else
            {
                if (item.Tabs.Count > 0)
                 {
                     <td colspan="4">
                         @renderTabs(item.Tabs)
                     </td>
                 }
                 else
                 {
                     <td>
                         @renderChordsColumn(item.FirstBarChords)
                     </td>
                     <td>
                         @renderChordsColumn(item.SecondBarChords)
                     </td>
                     <td class="rythm">
                         @renderRythmColumn(item.FirstBarRythms)
                     </td>
                     <td class="rythm">
                         @renderRythmColumn(item.SecondBarRythms)
                     </td>
                 }
            }
         </text>;

    Func<PartViewModel, object> renderPart =
        @<tr>
            <td class="part">@item.Part.Name</td>
            @renderMusic(item)
            <td>
                @foreach (string line in item.TextLines)
                {
                    @line<br />
                }
            </td>
        </tr>;

    <a href="/" class="control">Все песни</a>
    <h1 class="name">@Model.Song.Name</h1>
    <h3 class="author">@Model.Song.Author</h3>

    if (Model.Parts.Any(p => p.Part.HalfBars.Any(hb => hb.Chord is not null)))
    {
        <table class="control">
            <tr>
                <td>
                    Capo: <a href="/song?id=@Model.Id&delta=1&showRepeats=@Model.ShowRepeats">–</a> @Model.GetCurrentCapo() <a href="/song?id=@Model.Id&delta=-1&showRepeats=@Model.ShowRepeats">+</a> баррэ: @Model.GetCurrentBarresPercent().ToString("P0") <a href="/song?id=@Model.Id&autotune=true&showRepeats=@Model.ShowRepeats">😌</a>
                </td>
                <td>
                    Повторы: 
                    <a href="/song?id=@Model.Id&semitones=@Model.Song.CurrentTune&showRepeats=@(!Model.ShowRepeats)">
                        @if (Model.ShowRepeats)
                        {
                            <text>скрыть</text>
                        }
                        else
                        {
                            <text>показать</text>
                        }
                    </a>
                </td>
            </tr>
        </table>
        <table>
            @foreach (ChordViewModel chordViewModel in Model.Parts
                                                            .SelectMany(p => p.Part.HalfBars)
                                                            .Where(hb => hb.Chord is not null)
                                                            .Select(hb => new ChordViewModel(hb.Chord, hb.ChordOption))
                                                            .Distinct()
                                                            .Where(c => !c.IsSimple))
            {
                <tr>
                    <td class="chord">@chordViewModel.ToString()</td>
                    <td class="fingering">@chordViewModel.Fingering</td>
                </tr>
            }
        </table>
    }
    <table class="fixedSize">
        @foreach (PartViewModel part in Model.Parts)
        {
            @renderPart(part)
        }
    </table>
    if (Model.Song.Music is not null)
    {
        <iframe height="100" src="@Model.Song.Music" class="music"></iframe>
    }
    if (Model.Song.Tutorials is not null)
    {
        foreach (Uri tutorial in Model.Song.Tutorials)
        {
            <iframe width="560" height="315" src="@tutorial" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
        }
    }
}